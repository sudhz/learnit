{"ast":null,"code":"var _jsxFileName = \"C:\\\\case-study\\\\learnit\\\\learnit-frontend\\\\learnit\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { Alert, Box, Button, IconButton, InputAdornment, Stack, TextField, Typography } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8)\n});\nconst Login = () => {\n  _s();\n  var _errors$email, _errors$password;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: {\n      errors,\n      isSubmitting\n    }\n  } = useForm({\n    resolver: zodResolver(schema)\n  });\n  const onSubmit = async data => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log(data);\n      throw new Error();\n    } catch (error) {\n      setError(\"root\", {\n        message: \"This email is already taken\"\n      });\n    }\n  };\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    margin: 20,\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      margin: 5,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          width: 400,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            ...register(\"email\"),\n            label: \"Email\",\n            type: \"email\",\n            error: !!errors.email,\n            helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            ...register(\"password\"),\n            label: \"Password\",\n            type: showPassword ? \"text\" : \"password\",\n            error: !!errors.password,\n            helperText: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: () => setShowPassword(!showPassword),\n                  onMouseDown: e => e.preventDefault(),\n                  children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(Visibility, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), errors.root && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: errors.root.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            children: isSubmitting ? \"Loading...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            onClick: () => navigate(-1),\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"bW27gcFg9fYQ60+d9Ffvvsatwgo=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Alert","Box","Button","IconButton","InputAdornment","Stack","TextField","Typography","useForm","z","zodResolver","useNavigate","Visibility","VisibilityOff","useState","jsxDEV","_jsxDEV","schema","object","email","string","password","min","Login","_s","_errors$email","_errors$password","navigate","register","handleSubmit","setError","formState","errors","isSubmitting","resolver","onSubmit","data","Promise","resolve","setTimeout","console","log","Error","error","message","showPassword","setShowPassword","margin","alignItems","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","spacing","width","label","type","helperText","InputProps","endAdornment","position","size","onClick","onMouseDown","e","preventDefault","fontSize","root","severity","color","disabled","_c","$RefreshReg$"],"sources":["C:/case-study/learnit/learnit-frontend/learnit/src/components/Login.tsx"],"sourcesContent":["import {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { useState } from \"react\";\r\n\r\nconst schema = z.object({\r\n  email: z.string().email(),\r\n  password: z.string().min(8),\r\n});\r\n\r\ntype FormFields = z.infer<typeof schema>;\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormFields>({\r\n    resolver: zodResolver(schema),\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<FormFields> = async (data) => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      console.log(data);\r\n      throw new Error();\r\n    } catch (error) {\r\n      setError(\"root\", {\r\n        message: \"This email is already taken\",\r\n      });\r\n    }\r\n  };\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  return (\r\n    <Stack margin={20} alignItems=\"center\">\r\n      <Typography variant=\"h2\">Login</Typography>\r\n      <Box margin={5}>\r\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n          <Stack spacing={2} width={400}>\r\n            <TextField\r\n              {...register(\"email\")}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              error={!!errors.email}\r\n              helperText={errors.email?.message}\r\n            />\r\n            <TextField\r\n              {...register(\"password\")}\r\n              label=\"Password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              error={!!errors.password}\r\n              helperText={errors.password?.message}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                      onMouseDown={(e) => e.preventDefault()}\r\n                    >\r\n                      {showPassword ? (\r\n                        <VisibilityOff fontSize=\"small\" />\r\n                      ) : (\r\n                        <Visibility fontSize=\"small\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            {errors.root && (\r\n              <Alert severity=\"error\">{errors.root.message}</Alert>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? \"Loading...\" : \"Login\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              onClick={() => navigate(-1)}\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}